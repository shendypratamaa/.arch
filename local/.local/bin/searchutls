#!/bin/bash

# because when direct call browser inside terminal on asahi linux showing
# a bunch off error about GPU,and we must check before call it
BROWSERISOPEN="$(ps aux | grep -i "$BROWSER" | head -1 | awk '{print $11}')"

echo $(find "$HOME/.mozilla/firefox" | grep -i default-release | head -1 | awk -F '/' '{print $6}') > "$BOOKMARKSPATH/firefox_id"

BOOKMARKSPATH="$HOME/.cache/tmp/firefox"
GETID=$(cat "$BOOKMARKSPATH/firefox_id")

generatebookmarks() {
	cp ~/.mozilla/firefox/"$GETID"/places.sqlite ~/.cache/tmp &&
		sqlite3 -line ~/.cache/tmp/places.sqlite 'select moz_places.url, moz_bookmarks.title from moz_bookmarks join moz_places on moz_bookmarks.fk = moz_places.id' &&
		rm -f "$HOME/.cache/tmp/places.sqlite"; rm -f "$HOME/.cache/tmp/firefox_id"
}

mkdir -p ~/.cache/tmp/firefox
generatebookmarks | grep -i url | awk -F '=' '{print $2}' | sed 's/ //g' >"$BOOKMARKSPATH/bookmarks_url"
generatebookmarks | grep -i title | awk -F '=' '{print $2}' | awk '{print substr ( $0, 0, 50 )}' | sed 's/ //' > "$BOOKMARKSPATH/bookmarks_title"
paste "$BOOKMARKSPATH/bookmarks_title" "$BOOKMARKSPATH/bookmarks_url" > "$HOME/.cache/tmp/bookmarks_result"

OPTS_MENU="search\nbookmarks"
SELECT_MENU=$(echo -e "$OPTS_MENU" | dmenu -p "select menu: " -i)

if [ "$SELECT_MENU" = "search" ]; then
	DATA="google\nyoutube\nstackoverflow\nreddit\ngithub\ndevto\nfreecodecamp\nmonkeytype\nlocaldev"
	SELECT_DATA=$(echo -e "$DATA" | dmenu -i -l 10 -p "where you want to go: ")

	if [ "$SELECT_DATA" = "google" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		URL="https://www.google.com/search?q=$QUERY_OPTS"
		xdg-open "$URL"
	elif [ "$SELECT_DATA" = "youtube" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		OPTS="Content\nChannel"
		SELECT_OPTS="$(echo -e "$OPTS" | dmenu -p "select options: " -i)"
		if [ "$SELECT_OPTS" = "Channel" ]; then
			QUERY_OPTS=$(dmenu -p "search channel name : " <&-)
			URL="https://youtube.com/@$QUERY_OPTS"
			xdg-open "$URL"
		elif [ "$SELECT_OPTS" = "Content" ]; then
			QUERY_OPTS=$(dmenu -p "search content : " <&-)
			URL="https://youtube.com/results?search_query=$QUERY_OPTS"
			xdg-open "$URL"
		fi
	elif [ "$SELECT_DATA" = "stackoverflow" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		URL="https://stackoverflow.com/search?q=$QUERY_OPTS"
		xdg-open "$URL"
	elif [ "$SELECT_DATA" = "reddit" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		OPTS="Content\nSubreddit"
		SELECT_OPTS=$(echo -e "$OPTS" | dmenu -p "select options: " -i)
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		if [ "$SELECT_OPTS" = "Content" ]; then
			URL="https://www.reddit.com/search/?q=$QUERY_OPTS"
			xdg-open "$URL"
		elif [ "$SELECT_OPTS" = "Subreddit" ]; then
			URL="https://www.reddit.com/r/$QUERY_OPTS"
			xdg-open "$URL"
		fi
	elif [ "$SELECT_DATA" = "github" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		USERNAME=$(dmenu -p "search username : " <&-)
		REPONAME=$(dmenu -p "search reponame : " <&-)
		if [ "$USERNAME" = "" ] || [ "$REPONAME" = "" ]; then
			URL="https://github.com/search?q="
			xdg-open "$URL"
		else
			URL="https://github.com/$USERNAME?tab=repositories&q=$REPONAME"
			xdg-open "$URL"
		fi
	elif [ "$SELECT_DATA" = "devto" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		OPTS="Most Relevant\nNewest\nOldest"
		SELECT_OPTS=$(echo -e "$OPTS" | dmenu -p "select options: " -i)
		if [ "$SELECT_OPTS" = "Most Relevant" ]; then
			URL="https://dev.to/search?q=$QUERY_OPTS"
			xdg-open "$URL"
		elif [ "$SELECT_OPTS" = "Newest" ]; then
			URL="https://dev.to/search?q=$QUERY_OPTS&sort_by=published_at&sort_direction=desc"
			xdg-open "$URL"
		elif [ "$SELECT_OPTS" = "Oldest" ]; then
			URL="https://dev.to/search?q=$QUERY_OPTS&sort_by=published_at&sort_direction=asc"
			xdg-open "$URL"
		fi
	elif [ "$SELECT_DATA" = "freecodecamp" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		URL="https://freecodecamp.org/news/search/?query=$QUERY_OPTS"
		xdg-open "$URL"
	elif [ "$SELECT_DATA" = "monkeytype" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		URL="https://monkeytype.com"
		xdg-open "$URL"
	elif [ "$SELECT_DATA" = "localdev" ] && [ "$BROWSERISOPEN" = "$BROWSERISOPEN" ]; then
		QUERY_OPTS=$(dmenu -p "search something : " <&-)
		URL="http://localhost:$QUERY_OPTS"
		xdg-open "$URL"
	else
		notify-send "Search Information" "please make sure borwser is running and please select url options"
	fi
elif [ "$SELECT_MENU" = "bookmarks" ]; then
	DATA=$(sed "" "$HOME/.cache/tmp/bookmarks_result")
	SELECT=$(echo "$DATA" | dmenu -i -l 10 -p "where you want to go: ")
	GETLINK=$(echo "$SELECT" | awk -F 'https' '{print $2}')
	generatebookmarks; xdg-open "https$GETLINK";
fi
